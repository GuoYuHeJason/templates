        // Build client
        // Build the request to get joke.
        // client sends request
        final OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        // add arguments to url, or add headers as needed
        final Request request = new Request.Builder()
                .url(String.format(API_URL))
                .build();

        // Hint: look at the API documentation to understand what the response looks like.
        try {
            // Client creates a Call with Request
            // Call returns the Response from execute()
            final Response response = client.newCall(request).execute();

            // JSONObject is a dictionary that can be written to a JSON file
            // a JSON file has multiple JSONObjects:
            // file -> String -> JSONArray -> JSONObject
            // String jsonString = Files.readString(Paths.get(getClass().getClassLoader().getResource(filename).toURI()))
            // JSONArray jsonArray = new JSONArray(jsonString);
            // JSONObject jsonObject = jsonArray.getJSONObject(i);
            final JSONObject responseBody = new JSONObject(response.body().string());

            // Response body (the JSONObject)  varies for API.
            if (responseBody.getBoolean("error")) {
                throw new RuntimeException(responseBody.getString(MESSAGE));
            } else {
                }
            }
        }
        catch (IOException | JSONException event) {
            throw new RuntimeException(event);
        }
